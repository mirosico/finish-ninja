{"ast":null,"code":"import { FETCH_ALL, CREATE, UPDATE, DELETE, FETCH_ONE, SET_NUMBER_OF_PAGES, SET_PAGE, IS_LOADING } from '../constants/actionTypes';\nimport * as api from '../api/index.js';\nexport const setPage = page => dispatch => {\n  dispatch({\n    type: SET_PAGE,\n    payload: page\n  });\n};\nexport const fetchFilteredHeroes = function () {\n  let page = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n  return async dispatch => {\n    try {\n      dispatch({\n        type: IS_LOADING,\n        payload: true\n      });\n      const {\n        data\n      } = await api.fetchFilteredHeroes(page);\n      dispatch({\n        type: SET_NUMBER_OF_PAGES,\n        payload: Math.ceil(data.all / data.limit)\n      });\n      dispatch({\n        type: FETCH_ALL,\n        payload: data.data\n      });\n      dispatch({\n        type: IS_LOADING,\n        payload: false\n      });\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n};\nexport const uploadImages = images => async dispatch => {\n  try {\n    dispatch({\n      type: IS_LOADING,\n      payload: true\n    });\n    const {\n      data\n    } = await api.postImages(images);\n    dispatch({\n      type: IS_LOADING,\n      payload: false\n    });\n    return data;\n  } catch (err) {\n    console.error(err.message);\n  }\n};\nexport const deleteImage = imageUrl => async dispatch => {\n  try {\n    dispatch({\n      type: IS_LOADING,\n      payload: true\n    });\n    await api.deleteImage(imageUrl);\n    dispatch({\n      type: IS_LOADING,\n      payload: false\n    });\n  } catch (err) {\n    console.error(err.message);\n  }\n};\nexport const getHero = id => async dispatch => {\n  try {\n    dispatch({\n      type: IS_LOADING,\n      payload: true\n    });\n    const {\n      data\n    } = await api.fetchHero(id);\n    dispatch({\n      type: FETCH_ONE,\n      payload: data\n    });\n    dispatch({\n      type: IS_LOADING,\n      payload: false\n    });\n  } catch (err) {\n    console.error(err.message);\n  }\n};\nexport const createHero = hero => async dispatch => {\n  try {\n    dispatch({\n      type: IS_LOADING,\n      payload: true\n    });\n    const {\n      data\n    } = await api.createHero(hero);\n    dispatch({\n      type: CREATE,\n      payload: data\n    });\n    dispatch({\n      type: IS_LOADING,\n      payload: false\n    });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\nexport const updateHero = (id, hero) => async dispatch => {\n  try {\n    dispatch({\n      type: IS_LOADING,\n      payload: true\n    });\n    const {\n      data\n    } = await api.updateHero(id, hero);\n    dispatch({\n      type: UPDATE,\n      payload: data\n    });\n    dispatch({\n      type: IS_LOADING,\n      payload: false\n    });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\nexport const deleteHero = id => async dispatch => {\n  try {\n    dispatch({\n      type: IS_LOADING,\n      payload: true\n    });\n    await api.deleteHero(id);\n    dispatch({\n      type: DELETE,\n      payload: id\n    });\n    dispatch({\n      type: IS_LOADING,\n      payload: false\n    });\n  } catch (error) {\n    console.log(error.message);\n  }\n};","map":{"version":3,"names":["FETCH_ALL","CREATE","UPDATE","DELETE","FETCH_ONE","SET_NUMBER_OF_PAGES","SET_PAGE","IS_LOADING","api","setPage","page","dispatch","type","payload","fetchFilteredHeroes","data","Math","ceil","all","limit","error","console","log","message","uploadImages","images","postImages","err","deleteImage","imageUrl","getHero","id","fetchHero","createHero","hero","updateHero","deleteHero"],"sources":["/Users/yurii.mysko/WebstormProjects/finish-ninja/client/src/actions/heroes.js"],"sourcesContent":["import {\n    FETCH_ALL,\n    CREATE,\n    UPDATE,\n    DELETE,\n    FETCH_ONE,\n    SET_NUMBER_OF_PAGES,\n    SET_PAGE,\n    IS_LOADING\n} from '../constants/actionTypes';\nimport * as api from '../api/index.js';\n\nexport const setPage = (page) => (dispatch) => {\n    dispatch({type: SET_PAGE, payload: page});\n};\n\nexport const fetchFilteredHeroes = (page = 1) => async (dispatch) => {\n    try {\n        dispatch({type: IS_LOADING, payload: true});\n\n        const {data} = await api.fetchFilteredHeroes(page);\n\n        dispatch({\n            type: SET_NUMBER_OF_PAGES,\n            payload: Math.ceil(data.all / data.limit),\n        });\n        dispatch({type: FETCH_ALL, payload: data.data});\n        dispatch({type: IS_LOADING, payload: false});\n\n    } catch (error) {\n        console.log(error.message);\n    }\n};\n\nexport const uploadImages = (images) => async (dispatch) => {\n    try {\n        dispatch({type: IS_LOADING, payload: true});\n\n        const {data} = await api.postImages(images);\n\n        dispatch({type: IS_LOADING, payload: false});\n        return data;\n    } catch (err) {\n        console.error(err.message);\n    }\n};\n\nexport const deleteImage = (imageUrl) => async (dispatch) => {\n    try {\n        dispatch({type: IS_LOADING, payload: true});\n\n        await api.deleteImage(imageUrl);\n\n        dispatch({type: IS_LOADING, payload: false});\n\n    } catch (err) {\n        console.error(err.message);\n    }\n};\n\nexport const getHero = (id) => async (dispatch) => {\n    try {\n        dispatch({type: IS_LOADING, payload: true});\n\n        const {data} = await api.fetchHero(id);\n\n        dispatch({type: FETCH_ONE, payload: data});\n        dispatch({type: IS_LOADING, payload: false});\n\n    } catch (err) {\n        console.error(err.message);\n    }\n};\n\nexport const createHero = (hero) => async (dispatch) => {\n    try {\n        dispatch({type: IS_LOADING, payload: true});\n        const {data} = await api.createHero(hero);\n\n        dispatch({type: CREATE, payload: data});\n        dispatch({type: IS_LOADING, payload: false});\n\n    } catch (error) {\n        console.log(error.message);\n    }\n};\n\nexport const updateHero = (id, hero) => async (dispatch) => {\n    try {\n        dispatch({type: IS_LOADING, payload: true});\n        const {data} = await api.updateHero(id, hero);\n\n        dispatch({type: UPDATE, payload: data});\n        dispatch({type: IS_LOADING, payload: false});\n\n    } catch (error) {\n        console.log(error.message);\n    }\n};\n\nexport const deleteHero = (id) => async (dispatch) => {\n    try {\n        dispatch({type: IS_LOADING, payload: true});\n        await api.deleteHero(id);\n\n        dispatch({type: DELETE, payload: id});\n        dispatch({type: IS_LOADING, payload: false});\n    } catch (error) {\n        console.log(error.message);\n    }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}